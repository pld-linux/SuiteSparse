--- SuiteSparse/SuiteSparse_config/SuiteSparse_config.mk.orig	2018-12-23 04:15:58.000000000 +0100
+++ SuiteSparse/SuiteSparse_config/SuiteSparse_config.mk	2023-01-16 17:21:47.457377662 +0100
@@ -136,7 +136,7 @@ SUITESPARSE_VERSION = 5.4.0
 
     # The CF macro is used by SuiteSparse Makefiles as a combination of
     # CFLAGS, CPPFLAGS, TARGET_ARCH, and system-dependent settings.
-    CF ?= $(CFLAGS) $(CPPFLAGS) $(TARGET_ARCH) $(OPTIMIZATION) -fexceptions -fPIC
+    CF ?= $(CFLAGS) $(CPPFLAGS) $(TARGET_ARCH) -fPIC
 
     #---------------------------------------------------------------------------
     # code formatting (for Tcov on Linux only)
@@ -176,7 +176,7 @@ SUITESPARSE_VERSION = 5.4.0
             LAPACK =
         else
             # use the OpenBLAS at http://www.openblas.net
-            BLAS = -lopenblas
+            BLAS = -lblas
         endif
     endif
 
@@ -201,7 +201,7 @@ SUITESPARSE_VERSION = 5.4.0
     # A Fortran compiler is optional.  Only required for the optional Fortran
     # interfaces to AMD and UMFPACK.  Not needed by 'make' or 'make install'
     F77 ?= gfortran
-    F77FLAGS ?= $(FFLAGS) $(OPTIMIZATION)
+    F77FLAGS ?= $(FFLAGS)
 
     #---------------------------------------------------------------------------
     # NVIDIA CUDA configuration for CHOLMOD and SPQR
@@ -358,7 +358,7 @@ SUITESPARSE_VERSION = 5.4.0
 
     ifeq ($(UNAME),Linux)
         # add the realtime library, librt, and SuiteSparse/lib
-        LDLIBS += -lrt -Wl,-rpath=$(INSTALL_LIB)
+        LDLIBS += -lrt
     endif
 
     #---------------------------------------------------------------------------
--- SuiteSparse/CSparse/Lib/Makefile.orig	2017-12-23 20:00:31.000000000 +0100
+++ SuiteSparse/CSparse/Lib/Makefile	2023-01-13 16:42:59.747528205 +0100
@@ -15,7 +15,7 @@
 # CSparse/Lib.  It does not install it for system-wide usage.
 
 LIBRARY = libcsparse
-CF = $(CFLAGS) $(CPPFLAGS) $(TARGET_ARCH) -O
+CF = $(CFLAGS) $(CPPFLAGS) $(TARGET_ARCH)
 
 I = -I../Include
 RANLIB = ranlib
--- SuiteSparse/CSparse/Demo/Makefile.orig	2017-12-23 20:05:19.000000000 +0100
+++ SuiteSparse/CSparse/Demo/Makefile	2023-01-13 16:43:15.587442393 +0100
@@ -1,4 +1,4 @@
-CF = $(CFLAGS) $(CPPFLAGS) $(TARGET_ARCH) -O
+CF = $(CFLAGS) $(CPPFLAGS) $(TARGET_ARCH)
 I = -I../Include
 
 LDLIBS += -lm
--- SuiteSparse/Makefile.orig	2023-01-16 17:21:00.207633636 +0100
+++ SuiteSparse/Makefile	2023-01-16 17:23:30.703484997 +0100
@@ -12,8 +12,6 @@ include SuiteSparse_config/SuiteSparse_c
 # Compile the default rules for each package
 go: metis
 	( cd SuiteSparse_config && $(MAKE) )
-	( cd GraphBLAS && $(MAKE) CMAKE_OPTIONS='$(CMAKE_OPTIONS)' )
-	( cd Mongoose  && $(MAKE) CMAKE_OPTIONS='$(CMAKE_OPTIONS)' )
 	( cd AMD && $(MAKE) )
 	( cd BTF && $(MAKE) )
 	( cd CAMD && $(MAKE) )
@@ -38,8 +36,6 @@ endif
 # (note that CSparse is not installed; CXSparse is installed instead)
 install: metisinstall
 	( cd SuiteSparse_config && $(MAKE) install )
-	( cd GraphBLAS && $(MAKE) CMAKE_OPTIONS='$(CMAKE_OPTIONS)' install )
-	( cd Mongoose  && $(MAKE) CMAKE_OPTIONS='$(CMAKE_OPTIONS)' install )
 	( cd AMD && $(MAKE) install )
 	( cd BTF && $(MAKE) install )
 	( cd CAMD && $(MAKE) install )
@@ -116,8 +112,6 @@ endif
 # the static library
 library: metis
 	( cd SuiteSparse_config && $(MAKE) )
-	( cd GraphBLAS && $(MAKE) CMAKE_OPTIONS='$(CMAKE_OPTIONS)' library )
-	( cd Mongoose  && $(MAKE) CMAKE_OPTIONS='$(CMAKE_OPTIONS)' library )
 	( cd AMD && $(MAKE) library )
 	( cd BTF && $(MAKE) library )
 	( cd CAMD && $(MAKE) library )
@@ -143,8 +137,6 @@ endif
 # both the dynamic and static libraries.
 static: metis
 	( cd SuiteSparse_config && $(MAKE) static )
-	( cd GraphBLAS && $(MAKE) CMAKE_OPTIONS='$(CMAKE_OPTIONS)' static )
-	( cd Mongoose  && $(MAKE) CMAKE_OPTIONS='$(CMAKE_OPTIONS)' static )
 	( cd AMD && $(MAKE) static )
 	( cd BTF && $(MAKE) static )
 	( cd CAMD && $(MAKE) static )
@@ -219,8 +211,6 @@ clean:
 
 # Create the PDF documentation
 docs:
-	( cd GraphBLAS && $(MAKE) docs )
-	( cd Mongoose  && $(MAKE) docs )
 	( cd AMD && $(MAKE) docs )
 	( cd CAMD && $(MAKE) docs )
 	( cd KLU && $(MAKE) docs )
